{"version":3,"sources":["Banner.jsx","Calc.jsx","App.js","reportWebVitals.js","index.js"],"names":["Banner","Jumbotron","fluid","id","Container","Date","getFullYear","React","Component","Calc","props","state","basic","hra","other","elss","lic","phomeloan","othereightyc","fd","rent","otherded","oldscheme","s1","s2","s3","s4","taxstring","localStorage","getItem","taxstate","JSON","parse","this","setState","removeItem","field","value","setItem","stringify","number","n1","n2","num","Number","toFixed","split","replace","getEmployeePF","formatIndian","getEightyCDeductions","getRentDeduction","b","c","Math","min","taxable","getGrossAnnualSalary","getTotalDeductions","remaining","slab_range","tax_rate","totaltaxable","getTotalTaxableIncome","slab1","calculateSlabTax","rem1","slab2","rem2","slab3","rem3","slab4","cess","final","gross_annual_salary","employee_pf","total_deductions","eightyc","getFormattedEightyCDeductions","calculateOldSchemeTax","Row","Col","Form","action","Group","controlId","Label","Control","type","placeholder","onChange","e","update","target","Text","className","disabled","align","Table","striped","bordered","hover","size","colSpan","totaltax","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.afffc630.chunk.js","sourcesContent":["import React from 'react';\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport Container from 'react-bootstrap/Container'\n\nclass Banner extends React.Component \n{\n    render() \n    {\n        return (\n            <Jumbotron fluid id=\"jumbo\">\n            <Container>\n              <h1>Lazy Tax</h1>\n              <p>Tax calculator - because you're bad at math</p>\n            </Container>\n            <span id=\"myname\">- Aravind Balaji, {new Date().getFullYear()}</span>\n          </Jumbotron>\n        )\n    }\n  }\n\n  export default Banner","import React from 'react';\nimport Banner from './Banner';\nimport Form from 'react-bootstrap/Form'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container'\nimport Table from 'react-bootstrap/Table'\n\nclass Calc extends React.Component \n{\n    constructor(props)\n    {\n        super(props);\n        this.state = {\n            basic : 0,\n            hra : 0,\n            other : 0,\n            elss : 0,\n            lic : 0,\n            phomeloan : 0,\n            othereightyc : 0,\n            fd : 0,\n            rent : 0,\n            otherded : 0,\n            oldscheme : {\n                s1 : 0,\n                s2 : 0,\n                s3 : 0,\n                s4 : 0\n            }\n        }\n    }\n\n    componentDidMount()\n    {\n        let taxstring = localStorage.getItem(\"com.rvnd.lazytax:taxstate\");\n        if(taxstring!=null)\n        {\n            let taxstate = JSON.parse(taxstring);\n            this.setState(\n                {\n                    ...taxstate,\n                });\n        }\n        else localStorage.removeItem(\"com.rvnd.lazytax:taxstate\");\n    }\n\n    update(field, value) {\n        this.setState(\n            {\n                ...this.state,\n                [field]: value\n            });\n        localStorage.setItem(\"com.rvnd.lazytax:taxstate\",JSON.stringify({\n            ...this.state,\n            [field]: value\n        }));\n\n    }\n\n    formatIndian(number)\n    {\n        number = Number(number);\n        number = number.toFixed(2);\n        var n1, n2;\n        let num = number + '' || '';\n        // works for integer and floating as well\n        n1 = num.split('.');\n        n2 = n1[1] || null;\n        n1 = n1[0].replace(/(\\d)(?=(\\d\\d)+\\d$)/g, \"$1,\");\n        num = n2 ? n1 + '.' + n2 : n1;\n        return num;\n    }\n\n    getGrossAnnualSalary()\n    {\n        //return <h5>Annual Gross Salary :<b>₹ {this.formatIndian(Number(this.state.basic) + Number(this.state.hra) + Number(this.state.other))}</b></h5>\n        return Number(this.state.basic) + Number(this.state.hra) + Number(this.state.other);\n    }\n\n    getEightyCDeductions()\n    {\n        let num =  Number(this.getEmployeePF() + Number(this.state.elss) + Number(this.state.lic) + Number(this.state.phomeloan) + Number(this.state.othereightyc) + Number(this.state.fd));\n        if(num >= 150000) return Number(150000);\n        return num;\n    }\n\n    getFormattedEightyCDeductions()\n    {\n        return <h5>Total 80C Deductions :<b>₹ {this.formatIndian(this.getEightyCDeductions()) + \" of \" + this.formatIndian(150000)}</b></h5> \n    }\n\n    getTotalDeductions()\n    {\n        //Standard deduction + Prof Tax\n        let deduction = 50000 + 2400 + this.getEightyCDeductions() + this.getRentDeduction() + Number(this.state.otherded);\n        return deduction;\n    }\n\n    getRentDeduction()\n    {\n        if(this.state.rent===0) return 0;\n        let b = (50/100) * Number(this.state.basic);\n        let c = Number(this.state.rent) - ((10/100) * Number(this.state.basic))\n        let ded =  Number(Math.min(this.state.hra, b, c));\n        return ded;\n    }\n\n    getEmployeePF()\n    {\n        return Number((12/100) * this.state.basic);\n    }\n    \n    getTotalTaxableIncome()\n    {\n        let taxable = this.getGrossAnnualSalary() - this.getTotalDeductions();\n        if(taxable <=0) return 0;\n        return taxable;\n    }\n\n    calculateSlabTax(remaining, slab_range, tax_rate)\n    {\n       if(remaining >=slab_range) return slab_range * (tax_rate/100);\n       else return remaining * (tax_rate/100);\n    }\n\n    calculateOldSchemeTax()\n    {\n        let totaltaxable = this.getTotalTaxableIncome();\n\n        let slab1 = this.calculateSlabTax(totaltaxable, 250000, 0);\n        let rem1 = totaltaxable - 250000;\n        if(rem1 <=0) rem1 = 0;\n\n        let slab2 = this.calculateSlabTax(rem1,250000, 5);\n        let rem2 = rem1 - 250000;\n        if(rem2 <=0) rem2 = 0;\n\n        let slab3= this.calculateSlabTax(rem1,500000, 20);\n        let rem3 = rem2 - 500000;\n        if(rem3 <=0) rem3 = 0;\n\n        let slab4 = this.calculateSlabTax(rem3, rem3, 30);\n        let cess = (4/100) * (slab1 + slab2 + slab3 + slab4);\n        let final = {\n            's1' : Number(slab1),\n            's2' : Number(slab2),\n            's3' : Number(slab3),\n            's4' : Number(slab4),\n            'totaltax' : Number(slab1 + slab2 + slab3 + slab4 + cess)\n        }\n\n        let oldie = JSON.stringify(this.state.oldscheme);\n        let finaly = JSON.stringify(final);\n        \n        if(oldie!==finaly)\n        {\n            this.setState(\n                {\n                    ...this.state,\n                    'oldscheme' : final\n                });\n        }\n    }\n\n    render() \n    {\n        \n        let gross_annual_salary = <h5>Annual Gross Salary :<b>₹ {this.formatIndian(Number(this.getGrossAnnualSalary()))}</b></h5>;\n        let employee_pf = this.getEmployeePF();\n        let total_deductions = <h5>Total Deductions : <b>₹ {this.formatIndian(Number(this.getTotalDeductions()))}</b></h5> \n        let eightyc = this.getFormattedEightyCDeductions();\n        let totaltaxable = <h5><b>Total Taxable Income : ₹ {this.formatIndian(Number(this.getTotalTaxableIncome()))}</b></h5>;\n\n        this.calculateOldSchemeTax();\n        return (\n            <div>\n                <Banner></Banner>\n                <Container fluid>\n                    <Row>\n                        <Col>\n                            <Form action=\"#\">\n                                <Form.Group controlId=\"basicSalary\">\n                                    <Form.Label>Basic Salary</Form.Label>\n                                    <Form.Control type=\"number\" placeholder=\"Annual Basic Salary\" value={this.state.basic} onChange={(e)=> {this.update('basic',e.target.value); }}/>\n                                    <Form.Text className=\"text-muted\">Your annual basic salary</Form.Text>\n                                </Form.Group>\n                            </Form>\n                        </Col>\n                        <Col>\n                            <Form>\n                                <Form.Group controlId=\"hra\">\n                                    <Form.Label>Housing Allowance</Form.Label>\n                                    <Form.Control type=\"number\" placeholder=\"Annual HRA\" value={this.state.hra} onChange={(e)=> {this.update('hra',e.target.value)}} />\n                                    <Form.Text className=\"text-muted\">Annual HRA your company provides</Form.Text>\n                                </Form.Group>\n                            </Form>\n                        </Col>\n                        <Col>\n                            <Form>\n                                <Form.Group controlId=\"otherAllowance\">\n                                    <Form.Label>Other Allowances/Bonuses</Form.Label>\n                                    <Form.Control type=\"number\" placeholder=\"Other allowances\" value={this.state.other} onChange={(e)=> {this.update('other',e.target.value)}}/>\n                                    <Form.Text className=\"text-muted\">Add up your other allowances/bonuses provided annually</Form.Text>\n                                </Form.Group>\n                            </Form>\n                        </Col>\n                    </Row>\n                    <br/>\n                    <Row>\n                        <Col>{gross_annual_salary}</Col>\n                    </Row>\n                </Container>\n                <br/><br/> \n                <Container fluid>\n                    <Row>\n                        <Col>\n                            <Form>\n                                <Form.Group controlId=\"Employee PF\">\n                                    <Form.Label>Employee PF (80C)</Form.Label>\n                                    <Form.Control type=\"number\" value={employee_pf} disabled/>\n                                    <Form.Text className=\"text-muted\">Employee PF (12% of BASIC)</Form.Text>\n                                </Form.Group>\n                            </Form>\n                        </Col>\n                        <Col>\n                            <Form>\n                                <Form.Group controlId=\"ELSS\">\n                                    <Form.Label>ELSS Funds (80C)</Form.Label>\n                                    <Form.Control type=\"number\" value={this.state.elss} onChange={(e)=>this.update('elss',e.target.value)}/>\n                                    <Form.Text className=\"text-muted\">Total invested amount for the year</Form.Text>\n                                </Form.Group>\n                            </Form>\n                        </Col>\n                        <Col>\n                            <Form>\n                                <Form.Group controlId=\"lic\">\n                                    <Form.Label>Life Insurance (80C)</Form.Label>\n                                    <Form.Control type=\"number\" value={this.state.lic} onChange={(e)=>this.update('lic',e.target.value)}/>\n                                    <Form.Text className=\"text-muted\">Total insurance premium paid for the year</Form.Text>\n                                </Form.Group>\n                            </Form>\n                        </Col>\n                        <Col>\n                            <Form>\n                                <Form.Group controlId=\"pghomeloan\">\n                                    <Form.Label>Principal Home Loan(80C)</Form.Label>\n                                    <Form.Control type=\"number\" value={this.state.phomeloan} onChange={(e)=>this.update('phomeloan',e.target.value)}/>\n                                    <Form.Text className=\"text-muted\">Principal portion of the EMI paid for home loan</Form.Text>\n                                </Form.Group>\n                            </Form>\n                        </Col>\n                        <Col>\n                            <Form>\n                                <Form.Group controlId=\"fd\">\n                                    <Form.Label>Tax-Saving FD (80C)</Form.Label>\n                                    <Form.Control type=\"number\" value={this.state.fd} onChange={(e)=>this.update('fd',e.target.value)}/>\n                                    <Form.Text className=\"text-muted\">Total investment in Tax Saving FD for 5y</Form.Text>\n                                </Form.Group>\n                            </Form>\n                        </Col>\n                        <Col>\n                            <Form>\n                                <Form.Group controlId=\"other\">\n                                    <Form.Label>Other 80C Deductions</Form.Label>\n                                    <Form.Control type=\"number\" value={this.state.othereightyc}  onChange={(e)=>this.update('othereightyc',e.target.value)}/>\n                                    <Form.Text className=\"text-muted\">Total investment in other 80c deductions not declared here</Form.Text>\n                                </Form.Group>\n                            </Form>\n                        </Col>\n                    </Row>\n                    <br/>\n                    <Row>\n                        <Col>{eightyc}</Col>\n                    </Row>\n                    <br/><br/>\n                    <Row>\n                        <Col>\n                            <Form>\n                                <Form.Group controlId=\"stdded\">\n                                    <Form.Label>Standard Deduction</Form.Label>\n                                    <Form.Control type=\"number\" value=\"50000\" disabled/>\n                                    <Form.Text className=\"text-muted\">Standard deduction offered </Form.Text>\n                                </Form.Group>\n                            </Form>\n                        </Col>\n                        <Col>\n                            <Form>\n                                <Form.Group controlId=\"proftax\">\n                                    <Form.Label>Professional Tax</Form.Label>\n                                    <Form.Control type=\"number\" value=\"2400\" disabled/>\n                                    <Form.Text className=\"text-muted\">Professional Tax (200 per month) </Form.Text>\n                                </Form.Group>\n                            </Form>\n                        </Col>\n                        <Col>\n                            <Form>\n                                <Form.Group controlId=\"rent\">\n                                    <Form.Label>House Rent (10 - 13A)</Form.Label>\n                                    <Form.Control type=\"number\" value={this.state.rent} onChange={(e)=>this.update('rent',e.target.value)}/>\n                                    <Form.Text className=\"text-muted\">Yearly rent (Non-metro). Specifiy 0 if not in rented house</Form.Text>\n                                </Form.Group>\n                            </Form>\n                        </Col>\n                        <Col>\n                            <Form>\n                                <Form.Group controlId=\"otherded\">\n                                    <Form.Label>Other Deductions</Form.Label>\n                                    <Form.Control type=\"number\" value={this.state.otherded} onChange={(e)=>this.update('otherded',e.target.value)}/>\n                                    <Form.Text className=\"text-muted\">Ex. Meal coupons or ANY other deduction</Form.Text>\n                                </Form.Group>\n                            </Form>\n                        </Col>\n                    </Row>\n                    <br/>\n                    <Row>\n                        <Col>{total_deductions}</Col>\n                    </Row>\n                </Container>\n                \n                <br/><br/>\n                <hr/>\n                <Container>\n                    <Row>\n                        <Col>{totaltaxable}</Col>\n                    </Row>\n                </Container>\n                <hr></hr>\n                <br/><br/>\n                <Container fluid>\n                <h5 align=\"left\">Tax Calculation (Old Regime)</h5> \n                    <br/>\n                    <Row>\n                        <Table striped bordered hover size=\"sm\">\n                            <thead>\n                                <tr>\n                                <th>Slab</th>\n                                <th>Tax Rate</th>\n                                <th>Tax Payable</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr>\n                                    <td>0 to ₹2,50,000</td>\n                                    <td>0%</td>\n                                    <td>₹ {this.formatIndian(this.state.oldscheme.s1)}</td>\n                                </tr>\n                                <tr>\n                                    <td>₹2,50,001 to ₹5,00,000\t</td>\n                                    <td>5%</td>\n                                    <td>₹ {this.formatIndian(this.state.oldscheme.s2)}</td>\n                                </tr>\n                                <tr>\n                                    <td>₹5,00,001 to ₹10,00,000</td>\n                                    <td>20%</td>\n                                    <td>₹ {this.formatIndian(this.state.oldscheme.s3)}</td>\n                                </tr>\n                                <tr>\n                                    <td>Above ₹10,00,000</td>\n                                    <td>30%</td>\n                                    <td>₹ {this.formatIndian(this.state.oldscheme.s4)}</td>\n                                </tr>\n                                <tr>\n                                    <th colSpan=\"2\">TOTAL TAX TO BE PAID THIS YEAR</th>\n                                    <th>₹ {this.formatIndian(this.state.oldscheme.totaltax)}</th>\n                                </tr>\n                                <tr>\n                                    <th colSpan=\"2\">TOTAL TAX TO BE PAID PER MONTH</th>\n                                    <th>₹ {this.formatIndian(this.state.oldscheme.totaltax/12)}</th>\n                                </tr>\n                            </tbody>\n                        </Table>\n                    </Row>\n                </Container>\n                <br/><br/>\n                <Container>\n\n                </Container>\n            </div>\n        )\n    }\n  }\n\n  export default Calc","import './App.css';\nimport Calc from './Calc'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <Calc></Calc>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}